
-- CHAT SERVICE SPECIFIC

-- DICTIONARIES

CREATE TABLE OBJECT_STATUS
(
	OBJECT_STATUS_ID			NUMBER(1) NOT NULL ,
	NAME						VARCHAR2(32) NOT NULL ,
	DESCRIPTION					VARCHAR2(256) NULL 
);
ALTER TABLE OBJECT_STATUS ADD CONSTRAINT PK_OBJECT_STATUS PRIMARY KEY (OBJECT_STATUS_ID);
INSERT INTO OBJECT_STATUS VALUES (0, 'ACTIVE', 'Object is active');
INSERT INTO OBJECT_STATUS VALUES (1, 'DISABLED', 'Object is disabled');
INSERT INTO OBJECT_STATUS VALUES (2, 'DELETED', 'Object is deleted');

CREATE TABLE CHAT_SESSION_STATUS
(
	CHAT_SESSION_STATUS_ID       NUMBER(1) NOT NULL ,
	NAME						 VARCHAR2(32) NOT NULL ,
	DESCRIPTION					 VARCHAR2(256) NULL 
);
ALTER TABLE CHAT_SESSION_STATUS ADD CONSTRAINT PK_CHAT_SESSION_STATUS PRIMARY KEY (CHAT_SESSION_STATUS_ID);
INSERT INTO CHAT_SESSION_STATUS VALUES (0, 'QUEUED', 'Session is just created');
INSERT INTO CHAT_SESSION_STATUS VALUES (1, 'ACTIVE', 'Performing conversation in the session');
INSERT INTO CHAT_SESSION_STATUS VALUES (2, 'COMPLETED', 'Session is completed');

CREATE TABLE CHAT_EVENT_TYPE
(
	CHAT_EVENT_TYPE_ID			NUMBER(2) NOT NULL ,
	NAME						VARCHAR2(64) NOT NULL ,
	DESCRIPTION					VARCHAR2(256) NULL 
);
ALTER TABLE CHAT_EVENT_TYPE ADD CONSTRAINT PK_CHAT_EVENT_TYPE PRIMARY KEY (CHAT_EVENT_TYPE_ID);

INSERT INTO CHAT_EVENT_TYPE VALUES (1, 'VisitorCreatesSessionToDept', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (2, 'AgentCreatesSessionToDept', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (3, 'AgentCreatesSessionToAgent', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (4, 'AgentInvitesAgent', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (5, 'AgentInvitesDept', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (6, 'AgentCancelsInviteAgent', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (7, 'AgentCancelsInviteDept', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (8, 'AgentAcceptsAgentSession', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (9, 'AgentAcceptsDeptSession', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (10, 'AgentRejectsAgentSession', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (12, 'AgentLeavesSession', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (13, 'VisitorLeavesSession', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (14, 'AgentSendsMessage', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (15, 'VisitorSendsMessage', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (16, 'VisitorReconnect', NULL);

INSERT INTO CHAT_EVENT_TYPE VALUES (17, 'VisitorUpdatesInfo', NULL);

INSERT INTO CHAT_EVENT_TYPE VALUES (18, 'AgentClosesSession', NULL);

INSERT INTO CHAT_EVENT_TYPE VALUES (19, 'VisitorAcceptedMediaCallProposal', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (20, 'VisitorRejectedMediaCallProposal', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (21, 'VisitorStoppedMediaCall', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (22, 'VisitorSetMediaCallConnectionId', NULL);

INSERT INTO CHAT_EVENT_TYPE VALUES (23, 'AgentMediaCallProposal', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (24, 'AgentStoppedMediaCall', NULL);

INSERT INTO CHAT_EVENT_TYPE VALUES (25, 'SessionTranscriptSentToVisitor', NULL);
INSERT INTO CHAT_EVENT_TYPE VALUES (26, 'VisitorRequestedTranscriptSent', NULL);

-- OBJECTS

CREATE TABLE CUSTOMER
(
	ID								NUMBER NOT NULL,
	CREATE_TIMESTAMP				DATE NOT NULL,
	UPDATE_TIMESTAMP				DATE NOT NULL,
	STATUS_ID						NUMBER(5) NOT NULL,
	NAME							NVARCHAR2(200) NOT NULL,
	DOMAINS							NCLOB NOT NULL,
	CREATE_IP						VARCHAR2(46) NULL
);
ALTER TABLE CUSTOMER ADD CONSTRAINT PK_CUSTOMER PRIMARY KEY (ID);
ALTER TABLE CUSTOMER ADD CONSTRAINT FK_CUSTOMER_STATUS FOREIGN KEY (STATUS_ID) REFERENCES OBJECT_STATUS (OBJECT_STATUS_ID);


CREATE TABLE CUSTOMER_USER
(
	ID								NUMBER NOT NULL,
	CUSTOMER_ID						NUMBER NOT NULL,
	CREATE_TIMESTAMP				DATE NOT NULL,
	UPDATE_TIMESTAMP				DATE NOT NULL,
	IS_ONLINE						NUMBER(1) NOT NULL,
	STATUS_ID						NUMBER(5) NOT NULL,
	EMAIL							NVARCHAR2(256) NOT NULL,
	FIRST_NAME						NVARCHAR2(60) NOT NULL,
    LAST_NAME						NVARCHAR2(60) NULL,
    PASSWORD						VARCHAR(192) NOT NULL,
	AVATAR						NVARCHAR2(60) NULL
);
ALTER TABLE CUSTOMER_USER ADD CONSTRAINT PK_CUSTOMER_USER PRIMARY KEY (ID);
ALTER TABLE CUSTOMER_USER ADD CONSTRAINT FK_CUSTOMER_USER_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID);
ALTER TABLE CUSTOMER_USER ADD CONSTRAINT FK_CUSTOMER_USER_STATUS FOREIGN KEY (STATUS_ID) REFERENCES OBJECT_STATUS (OBJECT_STATUS_ID);


CREATE TABLE PROPERTY_BAG
(
	PROPERTY_BAG_SKEY			NUMBER NOT NULL ,
	CUSTOMER_ID					NUMBER NULL ,
	USER_ID						NUMBER NULL ,
	PROPERTY_TYPE				VARCHAR2(64) NULL ,
	PROPERTY_FOLDER				VARCHAR2(128) NULL ,
	PROPERTY_NAME				VARCHAR2(192) NULL ,
	PROPERTY_VALUE				NVARCHAR2(2000) NULL 
);
CREATE SEQUENCE SEQ_PROPERTY_BAG INCREMENT BY 1 START WITH 1;
ALTER TABLE PROPERTY_BAG ADD CONSTRAINT PK_PROPERTY_BAG PRIMARY KEY (PROPERTY_BAG_SKEY);
ALTER TABLE PROPERTY_BAG ADD CONSTRAINT FK_PROPERTY_BAG_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID) ON DELETE SET NULL;
ALTER TABLE PROPERTY_BAG ADD CONSTRAINT FK_PROPERTY_BAG_USER FOREIGN KEY (USER_ID) REFERENCES CUSTOMER_USER (ID) ON DELETE SET NULL;


-- TYPE: chat.web, chat.admin

CREATE TABLE FORGOT_PASSWORD 
(
   SKEY							NUMBER NOT NULL,
   USER_ID						NUMBER NOT NULL,
   CREATE_TIMESTAMP				DATE NOT NULL,
   CODE							VARCHAR2(80) NOT NULL,
   EMAIL						NVARCHAR2(256) NOT NULL
);
CREATE SEQUENCE SEQ_FORGOT_PASSWORD INCREMENT BY 1 START WITH 1;
ALTER TABLE FORGOT_PASSWORD ADD CONSTRAINT PK_FORGOT_PASSWORD PRIMARY KEY (SKEY);
ALTER TABLE FORGOT_PASSWORD ADD CONSTRAINT UQ_FORGOT_PASSWORD_1 UNIQUE (CODE);
ALTER TABLE FORGOT_PASSWORD ADD CONSTRAINT FK_FORGOT_PASSWORD_USER FOREIGN KEY (USER_ID) REFERENCES CUSTOMER_USER (ID);

    
CREATE TABLE AGENT_SESSION
(
	GUID						RAW(16) NOT NULL,
	CUSTOMER_ID					NUMBER NOT NULL,
	AGENT_ID					NUMBER NOT NULL,
	IS_CONNECTED				NUMBER(1) NOT NULL,
	ADD_TIMESTAMP				DATE NOT NULL, 
	LAST_ACCESS_TIMESTAMP		DATE NOT NULL 
);
ALTER TABLE AGENT_SESSION ADD CONSTRAINT PK_AGENT_SESSION PRIMARY KEY (GUID);
ALTER TABLE AGENT_SESSION ADD CONSTRAINT FK_AGENT_SESSION_AGENT FOREIGN KEY (AGENT_ID) REFERENCES CUSTOMER_USER (ID);
ALTER TABLE AGENT_SESSION ADD CONSTRAINT FK_AGENT_SESSION_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID);

CREATE TABLE DEPARTMENT
(
	ID							NUMBER NOT NULL,
	CUSTOMER_ID					NUMBER NOT NULL,
	STATUS_ID					NUMBER(5) NOT NULL,
	IS_PUBLIC					NUMBER(5) NOT NULL,
	ADD_TIMESTAMP				DATE NOT NULL,
	UPDATE_TIMESTAMP			DATE NOT NULL,
	NAME						NVARCHAR2(32) NOT NULL,
	DESCRIPTION					NVARCHAR2(256) NULL
);
ALTER TABLE DEPARTMENT ADD CONSTRAINT PK_DEPARTMENT PRIMARY KEY (ID);
ALTER TABLE DEPARTMENT ADD CONSTRAINT FK_DEPARTMENT_STATUS FOREIGN KEY (STATUS_ID) REFERENCES OBJECT_STATUS (OBJECT_STATUS_ID);
ALTER TABLE DEPARTMENT ADD CONSTRAINT FK_DEPARTMENT_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID);


CREATE TABLE USER_ROLE
(
	USER_ID						NUMBER NOT NULL,
	ROLE_ID						NUMBER NOT NULL,
	DEPARTMENT_ID				NUMBER NULL,
	ADD_TIMESTAMP				DATE NOT NULL
);
ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USER_ROLE_USER FOREIGN KEY (USER_ID) REFERENCES CUSTOMER_USER (ID);
ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USER_ROLE_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (ID);


CREATE TABLE VISITOR
(
	VISITOR_ID					NUMBER NOT NULL ,
	CUSTOMER_ID					NUMBER NOT NULL ,
	ADD_TIMESTAMP				DATE NOT NULL ,
	UPDATE_TIMESTAMP			DATE NOT NULL ,
	NAME						NVARCHAR2(128) NULL ,
	EMAIL						VARCHAR2(64) NULL ,
	PHONE						VARCHAR2(64) NULL,
	MEDIA_SUPPORT				NUMBER(2) NULL,
	TRANSCRIPT_MODE				NUMBER(1) NULL
);
ALTER TABLE VISITOR ADD CONSTRAINT PK_VISITOR PRIMARY KEY (VISITOR_ID);
ALTER TABLE VISITOR ADD CONSTRAINT FK_VISITOR_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID);


CREATE TABLE CHAT_SESSION
(
	CHAT_SESSION_ID				NUMBER NOT NULL,
	CUSTOMER_ID					NUMBER NOT NULL,
	CHAT_SESSION_STATUS_ID		NUMBER(1) NOT NULL,
	IS_OFFLINE					NUMBER(1) NOT NULL,
	ADD_TIMESTAMP				DATE NOT NULL ,
	VISITOR_ID					NUMBER NULL
);

ALTER TABLE CHAT_SESSION ADD CONSTRAINT PK_CHAT_SESSION PRIMARY KEY (CHAT_SESSION_ID);
ALTER TABLE CHAT_SESSION ADD CONSTRAINT FK_CHAT_SESSION_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID);
ALTER TABLE CHAT_SESSION ADD CONSTRAINT FK_CHAT_SESSION_STATUS FOREIGN KEY (CHAT_SESSION_STATUS_ID) REFERENCES CHAT_SESSION_STATUS (CHAT_SESSION_STATUS_ID);
ALTER TABLE CHAT_SESSION ADD CONSTRAINT FK_CHAT_SESSION_VISITOR FOREIGN KEY (VISITOR_ID) REFERENCES VISITOR (VISITOR_ID);


CREATE TABLE CHAT_EVENT
(
	CHAT_SESSION_ID				NUMBER NOT NULL,
	CHAT_EVENT_ID				NUMBER NOT NULL ,
	CHAT_EVENT_TYPE_ID			NUMBER(2) NOT NULL ,
	"TIMESTAMP"					DATE NOT NULL ,

	AGENT_ID					NUMBER NULL,
	TARGET_AGENT_ID				NUMBER NULL,
	TARGET_DEPARTMENT_ID		NUMBER NULL,

	IS_TO_AGENTS_ONLY			NUMBER(1) NULL,
	IS_OFFLINE_SESSION			NUMBER(1) NULL,
	ACT_ON_BEHALF_OF_INVITOR	NUMBER(1) NULL,
	IS_DISCONNECTED				NUMBER(1) NULL,
	IS_BECAME_OFFLINE			NUMBER(1) NULL,
	HAS_VIDEO					NUMBER(1) NULL,

	TEXT						NVARCHAR2(1999) NULL
);
ALTER TABLE CHAT_EVENT ADD CONSTRAINT PK_CHAT_EVENT PRIMARY KEY (CHAT_EVENT_ID);
ALTER TABLE CHAT_EVENT ADD CONSTRAINT FK_CHAT_EVENT_SESSION FOREIGN KEY (CHAT_SESSION_ID) REFERENCES CHAT_SESSION (CHAT_SESSION_ID);
ALTER TABLE CHAT_EVENT ADD CONSTRAINT FK_CHAT_EVENT_TYPE FOREIGN KEY (CHAT_EVENT_TYPE_ID) REFERENCES CHAT_EVENT_TYPE (CHAT_EVENT_TYPE_ID);
ALTER TABLE CHAT_EVENT ADD CONSTRAINT FK_CHAT_EVENT_AGENT FOREIGN KEY (AGENT_ID) REFERENCES CUSTOMER_USER (ID);
ALTER TABLE CHAT_EVENT ADD CONSTRAINT FK_CHAT_EVENT_TARG_AGENT FOREIGN KEY (TARGET_AGENT_ID) REFERENCES CUSTOMER_USER (ID);
ALTER TABLE CHAT_EVENT ADD CONSTRAINT FK_CHAT_EVENT_TARG_DEPT FOREIGN KEY (TARGET_DEPARTMENT_ID) REFERENCES DEPARTMENT (ID);


CREATE TABLE CANNED_MESSAGE (
  ID								NUMBER NOT NULL,
  CUSTOMER_ID						NUMBER NOT NULL,
  USER_ID							NUMBER NULL ,
  DEPARTMENT_ID						NUMBER NULL,
  CREATE_TIMESTAMP					DATE NOT NULL,
  UPDATE_TIMESTAMP					DATE NOT NULL,
  "KEY"								NVARCHAR2(50) NOT NULL,
  "VALUE"							NVARCHAR2(1999) NULL
);
ALTER TABLE CANNED_MESSAGE ADD CONSTRAINT PK_CANNED_MESSAGE PRIMARY KEY (ID);
ALTER TABLE CANNED_MESSAGE ADD CONSTRAINT FK_CANNED_MESSAGE_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (ID);
ALTER TABLE CANNED_MESSAGE ADD CONSTRAINT FK_CANNED_MESSAGE_USER FOREIGN KEY (USER_ID) REFERENCES CUSTOMER_USER (ID);
ALTER TABLE CANNED_MESSAGE ADD CONSTRAINT FK_CANNED_MESSAGE_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID);


CREATE TABLE WIDGET_LOAD
(
  CUSTOMER_ID NUMBER NOT NULL,
  UPDATED DATE NOT NULL,
  LOADS NUMBER NOT NULL,
  STAMP NUMBER NOT NULL,
  ISOVERLOAD NUMBER DEFAULT 0 NOT NULL 
);
ALTER TABLE WIDGET_LOAD ADD CONSTRAINT PK_WIDGET_LOAD PRIMARY KEY (CUSTOMER_ID, UPDATED);
ALTER TABLE WIDGET_LOAD ADD CONSTRAINT CHK_UPDATED_WIDGET_LOAD CHECK (UPDATED = trunc(UPDATED));
ALTER TABLE WIDGET_LOAD ADD CONSTRAINT FK_WIDGET_LOAD_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID);
